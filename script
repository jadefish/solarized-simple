#!/usr/bin/env ruby

require 'yaml'
require 'fileutils'

THEMES_DIRECTORY = 'colors/themes'.freeze
TEMPLATES_DIRECTORY = 'templates'.freeze
BASE_OUT_DIR = 'build'.freeze
BASE_COLORS_FILENAME = 'colors/base.yaml'.freeze

def base_colors
    File.open(BASE_COLORS_FILENAME) do |filename|
        YAML.load(filename)
    end
end

def themes
    Dir.glob("#{THEMES_DIRECTORY}/*.yaml").map do |filename|
        name = File.basename(filename, File.extname(filename))
        contents = File.open(filename) { |f| YAML.load(f) }

        [name, contents]
    end.to_h
end

def process_template(template)
    ext = File.extname(template)
    app = File.basename(template, ext)

    themes.each do |theme, theme_data|
        out_dir = File.join(BASE_OUT_DIR, app)
        out_file = File.join(out_dir, "#{theme}#{ext}")

        puts "Creating #{out_file} from (#{app}, #{theme})"

        FileUtils.mkdir_p(out_dir)
        FileUtils.cp(template, out_file)

        in_content = File.read(out_file)

        theme_data.each do |k, v|
            next if k.empty?

            pattern = /@#{k}\b/
            color = base_colors[v]

            in_content = in_content.gsub(pattern, color)
        end

        in_content.gsub!('@themeName', "Solarized Simple: #{theme.capitalize}")

        File.open(out_file, 'w') { |file| file.write(in_content) }
    end
end

Dir.glob("#{TEMPLATES_DIRECTORY}/*").each do |template|
    process_template(template)
end
